import numpy as np
import math

def printM(A):
    rows = len(A)
    for i in range(0,rows):
        for j in range(0, len(A[0])):
            print( (round(A[i][j],6)) , end = ', ')
        print()
    print("- - - - -")

def transpose(A):
    #Khoi tao ma tran ket qua
    shape = A.shape
    m=shape[0] #Cho biet so dong cua A
    n=shape[1] #Cho biet so cot cua A
    AT = np.zeros((n,m))
    for i in range(m):
        for j in range(n):
            AT[j][i]=A[i][j]
    return AT

def xichmaPlus(A):
    A = transpose(A)
    for i in range(0,len(A)):
        if (A[i][i] != 0):
            A[i][i] = 1 / A[i][i];
    return A

def vectorUtoMatrix(A, U):
    shape = A.shape
    m=shape[0] #Cho biet so dong cua A
    n=shape[1] #Cho biet so cot cua A
    result = np.zeros((m,n))
    i = len(U)
    for j in range(0,i):
        result[j][j] = U[j]
    return result

def innerproduct(v1, v2):
    if len(v1) != len (v2):
        return "Loi kich thuoc! ";
    s = 0
    for i in range(0,len(v1)):
        s += v1[i] * v2[i];
    return s

def NhanMaTran(A, B):
    #Khoi tao ma tran ket qua
    #Nhan hai ma tran
    m=len(A)#Cho biet so dong cua A
    n = B.shape
    n = n[1]
    C = np.zeros((m,n))

    cotB = []
    cotB = transpose(B) # do khi nhân lấy dòng i ma trận a nhân cột j, nên em dùng ma trận chuyển vị để thành dòng i x dòng j => dùng lại hàm nhân 2 vector

    for i in range(0,m):
        for j in range(0,n):
            C[i][j] = innerproduct(A[i], cotB[j])
    return C

Nam = np.array([[1971, 1], [1972, 1], [1974, 1], [1978, 1], [1982, 1], [1985, 1], [1989, 1], [1993, 1], [1997, 1], [1999, 1], [2000, 1], [2002, 1], [2003, 1]])
SoBongBanDan = np.array([2250, 2500, 5000, 29000, 120000, 275000, 1180000, 3100000, 7500000, 24000000, 42000000, 220000000, 410000000])

yy = [math.log10(xx) for xx in SoBongBanDan]
y = np.zeros((len(yy),1))
for i in range(0,len(y)):
    y[i][0] = yy[i]

for i in range(len(Nam)):
    Nam[i][0] -= 1970

U, D, VT = np.linalg.svd(Nam) 

#tìm A+
APlus = NhanMaTran(transpose(VT), xichmaPlus(vectorUtoMatrix(Nam,D)))
APlus = NhanMaTran(APlus, transpose(U))

printM(NhanMaTran(APlus,y))